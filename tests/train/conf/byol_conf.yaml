env:
  seed: 1337
  numpy_seed: 1337
  jax_seed: 1337
  epochs: 100
  accum_steps: 1
  save_checkpoint:
    params:
      ckpt_dir: "outs/checkpoints/"
      keep: 1
      overwrite: True
      keep_every_n_steps: 300
  restore_checkpoint:
    params: {}
  half_precision: False
  dynamic_scale: False
  dynamic_scale_params: {}
  input_shape: (32,32,3)

trainer:
  name: SSLTrainer

model:
  name: SSLModel
  branches:
    0:
      name: Branch
      stages:
        stop_gradient: False
        body:
          module: ResNet
          pretrained: "/tests/train/conf/ResNet50_ImageNet1k"
          params:
            stage_sizes: [3, 4, 6, 3]
            block_cls_name: "BottleneckResNetBlock"
            num_classes: False
        head:
          module: MLP
          params:
            layer_dims: [4096, 256]
            dropout_prob: 0.0
            batch_norm: True
            batch_norm_params:
              use_running_average: True
              momentum: 0.9
              epsilon: 1e-5
            activation_name: "relu"
        pred:
          module: MLP
          params:
            layer_dims: [4096, 256]
            dropout_prob: 0.0
            batch_norm: False
            batch_norm_params:
                decay_rate: 0.9
                epsilon: 1e-5
            activation_name: "relu"

    1:
      name: Branch
      stages:
        stop_gradient: True
        body:
          module: ResNet
          pretrained: "/tests/train/conf/ResNet50_ImageNet1k"
          params:
            stage_sizes: [3, 4, 6, 3]
            block_cls_name: "BottleneckResNetBlock"
            num_classes: False
        head:
          module: MLP
          params:
            layer_dims: [4096, 256]
            dropout_prob: 0.0
            batch_norm: True
            batch_norm_params:
              use_running_average: True
              momentum: 0.9
              epsilon: 1e-5
            activation_name: "relu"


loss: byol_regression_loss

optimizers:
  branches:
    0:
      name: lars
      params:
        # TODO: check that this should be momentum (comes from deepmind's \beta)
        momentum: 0.9
        trust_coefficient: 1e-3
        weight_decay: 1.5e-6
        weight_decay_mask: True
        trust_ratio_mask: True

schedulers:
  branches:
    0:
      name: BYOL
      params:
        # note that learning rate scales w/ number of epochs see deepmind implementation
        base_learning_rate: 0.45
        warmup_steps: 1000
        batch_size: 4096
        # epochs * train_images_per_epoch // batch_size
        # TODO: for now this is a random number
        total_steps: 100000

post_process:
  funcs:
    0:
      name: ema
      params:
        online_branch_name: branch_0
        target_branch_name: branch_1
        tau: 0.9
        remove_from_online: [pred]

meter:
  name: SSLMeter

pipelines:
  pre:
    augmentations:
      RandomFlip:
        params:
          prob: 1.0
  branches:
    0:
      augmentations:
        RandomFlip:
          params:
            prob: 1.0
        ColorTransform:
          params:
            prob: 1.0
            brightness: 0.4
            contrast: 0.4
            saturation: 0.2
            hue: 0.1
            color_jitter_prob: 0.8
            to_grayscale_prob: 0.2
            shuffle: True
        GaussianBlur:
          params:
            prob: 0.1
        Solarize:
          params:
            prob: 0.2
            threshold: 0.5
        Clip:
          params:
            prob: 1.0
            x_min: 0
            x_max: 1
    1:
      augmentations:
        RandomFlip:
          params:
            prob: 1.0
        ColorTransform:
          params:
            prob: 1.0
            brightness: 0.4
            contrast: 0.4
            saturation: 0.2
            hue: 0.1
            color_jitter_prob: 0.8
            to_grayscale_prob: 0.2
            shuffle: True
        GaussianBlur:
          params:
            prob: 1.0
        Clip:
          params:
            prob: 1.0
            x_min: 0
            x_max: 1

dataloader:
  platform: torch
  name: CIFAR10
  params:
    batch_size: 128
    flatten: False
    input_shape: (32,32,3)
